package com.example.look_a_bird.ui.addpost

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.ProgressBar
import android.widget.Toast
import androidx.fragment.app.Fragment
import com.example.look_a_bird.R
import com.example.look_a_bird.model.Post
import android.widget.Button
import androidx.core.content.ContextCompat
import com.google.android.material.textfield.TextInputEditText
import androidx.navigation.fragment.navArgs
import com.google.android.gms.location.LocationServices
import android.Manifest
import android.content.pm.PackageManager




class AddPostFragment : Fragment() {

    private lateinit var imagePostPreview: ImageView
    private lateinit var buttonSelectImage: Button
    private lateinit var editTextBirdName: TextInputEditText
    private lateinit var editTextScientificName: TextInputEditText
    private lateinit var editTextDescription: TextInputEditText
    private lateinit var editTextLocation: TextInputEditText
    private lateinit var buttonGetLocation: Button
    private lateinit var buttonSavePost: Button
    private lateinit var progressBar: ProgressBar
    private val args: AddPostFragmentArgs by navArgs()


    private var selectedImageUri: String = ""

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        return inflater.inflate(R.layout.fragment_add_post, container, false)
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        setupViews(view)
        setupClickListeners()
    }

    private fun setupViews(view: View) {
        imagePostPreview = view.findViewById(R.id.image_post_preview)
        buttonSelectImage = view.findViewById(R.id.button_select_image)
        editTextBirdName = view.findViewById(R.id.edit_text_bird_name)
        editTextScientificName = view.findViewById(R.id.edit_text_scientific_name)
        editTextDescription = view.findViewById(R.id.edit_text_description)
        editTextLocation = view.findViewById(R.id.edit_text_location)
        buttonGetLocation = view.findViewById(R.id.button_get_location)
        buttonSavePost = view.findViewById(R.id.button_save_post)
        progressBar = view.findViewById(R.id.progress_bar)
    }

    private fun setupClickListeners() {
        buttonSelectImage.setOnClickListener {
            selectImage()
        }

        buttonGetLocation.setOnClickListener {
            getCurrentLocation()
        }

        buttonSavePost.setOnClickListener {
            savePost()
        }
    }

    private fun selectImage() {
        // Here we will add image selection functionality
        Toast.makeText(context, "Image selection - will implement later", Toast.LENGTH_SHORT).show()
    }

    private fun getCurrentLocation() {
        val fusedLocationClient = LocationServices.getFusedLocationProviderClient(requireActivity())

        if (ContextCompat.checkSelfPermission(
                requireContext(),
                Manifest.permission.ACCESS_FINE_LOCATION
            ) == PackageManager.PERMISSION_GRANTED
        ) {
            fusedLocationClient.lastLocation.addOnSuccessListener { location ->
                if (location != null) {
                    val lat = location.latitude.toFloat()
                    val lon = location.longitude.toFloat()
                    editTextLocation.setText("Lat: %.5f, Lon: %.5f".format(lat, lon))
                } else {
                    Toast.makeText(context, "Unable to get location", Toast.LENGTH_SHORT).show()
                }
            }
        } else {
            Toast.makeText(context, "Location permission not granted", Toast.LENGTH_SHORT).show()
        }
    }



    private fun savePost() {
        val birdName = editTextBirdName.text.toString().trim()
        val scientificName = editTextScientificName.text.toString().trim()
        val description = editTextDescription.text.toString().trim()
        val location = editTextLocation.text.toString().trim()

        if (!validateInput(birdName, description, location)) {
            return
        }

        showLoading(true)

        // Create new post
        val newPost = Post(
            id = "", // generated by Firebase
            userId = "current_user_id",
            userName = "Current User",
            userProfileImage = "",
            birdSpecies = birdName,
            scientificName = scientificName,
            description = description,
            imageUrl = selectedImageUri,
            latitude = args.latitude,
            longitude = args.longitude,
            location = location,
            timestamp = System.currentTimeMillis()
        )

        // Here we will save to Firebase
        simulateSavePost(newPost)
    }

    private fun validateInput(birdName: String, description: String, location: String): Boolean {
        if (birdName.isEmpty()) {
            editTextBirdName.error = "Bird name is required"
            return false
        }

        // Validate bird name contains only letters and spaces
        if (!birdName.matches(Regex("^[a-zA-Z\\s]+$"))) {
            editTextBirdName.error = "Bird name can only contain letters and spaces"
            return false
        }

        if (description.isEmpty()) {
            editTextDescription.error = "Description is required"
            return false
        }

        if (location.isEmpty()) {
            editTextLocation.error = "Location is required"
            return false
        }

        return true
    }

    private fun simulateSavePost(post: Post) {
        // Simulate saving - will replace with Firebase
        view?.postDelayed({
            showLoading(false)
            Toast.makeText(context, "Post saved successfully!", Toast.LENGTH_SHORT).show()

            // Clear form
            clearForm()

            // Navigate back or to home
            // Here we will add navigation
        }, 2000)
    }

    private fun clearForm() {
        editTextBirdName.text?.clear()
        editTextScientificName.text?.clear()
        editTextDescription.text?.clear()
        editTextLocation.text?.clear()
        selectedImageUri = ""
        imagePostPreview.setImageResource(android.R.drawable.ic_menu_camera)
    }

    private fun showLoading(show: Boolean) {
        progressBar.visibility = if (show) View.VISIBLE else View.GONE
        buttonSavePost.isEnabled = !show
        buttonSelectImage.isEnabled = !show
        buttonGetLocation.isEnabled = !show
    }
}